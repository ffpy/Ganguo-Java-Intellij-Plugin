import ${packageName}.domain.repository.${moduleName}.I${Name}DbStrategy;
import ${packageName}.domain.repository.${moduleName}.I${Name}Repository;
import ${packageName}.jooq.tables.pojos.${pojoCls};
import ${packageName}.jooq.tables.records.${recordCls};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;

@Repository
@Primary
public class ${Name}Repository implements I${Name}Repository {

    @Autowired
    private I${Name}DbStrategy ${name}DbStrategy;

    @Override
    public ${pojoCls} insert(${pojoCls} ${pojoName}) {
        return ${name}DbStrategy.insert(${pojoName});
    }

    @Override
    public int updateById(Long id, ${recordCls} ${pojoName}) {
        return ${name}DbStrategy.updateById(id, ${pojoName});
    }

    @Override
    public int deleteByIds(List<Long> ids) {
        if (ids.isEmpty()) {
            return 0;
        }

        return ${name}DbStrategy.deleteByIds(ids);
    }

    @Override
    public Optional<${pojoCls}> findById(Long id) {
        return ${name}DbStrategy.findById(id);
    }

    @Override
    public List<${pojoCls}> listAll() {
        return ${name}DbStrategy.listAll();
    }

    @Override
    public boolean existsById(Long id) {
        return ${name}DbStrategy.existsById(id);
    }
}
